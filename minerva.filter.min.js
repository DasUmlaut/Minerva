Minerva.filter=new function(){this.gradientMap=function(r,e,n,a){var o={colorspace:"hsv"},v={};for(var i in o)v[i]=o[i];for(var i in a)v[i]=a[i];var t=0;if(r instanceof Minerva.Channel)t=1;else if(r instanceof Minerva.Img)return t=2,void console.log("Img mapping not yet supported, please use an instance of Minerva.Channel");var g=r.width,s=r.height,c=new Minerva.Img;c.setSize(g,s);var l,p,f=Minerva.Convert.hex2rgb(e),b=Minerva.Convert.hex2rgb(n);"rgb"!=v.colorspace?(l=Minerva.Convert["rgb2"+v.colorspace]([255*f.r&255,255*f.g&255,255*f.b&255]),p=Minerva.Convert["rgb2"+v.colorspace]([255*b.r&255,255*b.g&255,255*b.b&255])):(l=[255*f.r&255,255*f.g&255,255*f.b&255],p=[255*b.r&255,255*b.g&255,255*b.b&255]);for(var M=0;g>M;M++)for(var h=0;s>h;h++){for(var C=r.getAt(h*g+M),u=[],d=0;d<l.length;d++){var m=Minerva.Helper.lerp(C,l[d],p[d]);u[d]=m}var A=[];A="rgb"!=v.colorspace?Minerva.Convert[v.colorspace+"2rgb"](u):[u[0],u[1],u[2]],c.setColorAt(h*g+M,{r:A[0]/255,g:A[1]/255,b:A[2]/255}),c.setAlphaAt(h*g+M,1)}return c}};
